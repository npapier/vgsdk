1. Introduction
---------------
This document will guide you through the steps required to build vgsdk and its Qt viewer under linux. It is based on Debian GNU/Linux testing and Ubuntu GNU/Linux 14.04.


2. Installing requirements
--------------------------
Building vgsdk requires some tools and external libraries to be installed on your system:
- cmake 2.8.12
- gcc 4.x
- g++ 4.x
- p7zip-full 9.20.1
- python 2.7
- python-svn 1.7.8
- scons 2.3.0
- subversion 1.8.8
- libgl1-mesa-dev 13.1.3
- libglu1-mesa-dev 9.0.0

Remark : to achieve this, you will need access to super user privileges, or you will need to contact your system administrator.

As a super user, you can run the following command to install all of them :
apt-get install cmake gcc-4.9 g++-4.8 p7zip-full python2.7 python-svn scons subversion libgl1-mesa-dev libglu1-mesa-dev


3. Creating the building location
---------------------------------
Create a directory of your choice that will be used in the later steps. It will receive sources of vgsdk and SConsBuildFramework (the building tool), intermediate building files and build results. <build_dir> will be used later in this document to refer to the path of this directory.


4. Getting the sources
----------------------
- In a command line interpreter, change the current directory for <build_dir>
- You are about to retrieve the sources of vgsdk and SConsBuildFramework from remote svn repositories. Little hangs that may occur during the communication with the servers are normal.
  - To get SConsBuildFramework run 'svn co http://sbf.googlecode.com/svn/trunk SConsBuildFramework'
  - To get vgSDK using run 'svn co http://vgsdk.googlecode.com/svn/trunk vgsdk'


5. Configuring the building environment
---------------------------------------
- In a command line interpreter, change the current directory for <build_dir>/SConsBuildFramework.
- Copy the file 'SConsBuildFramework.options.sample' to 'SConsBuildFramework.options'. - Open 'SConsBuildFramework.options' in a text editor and set configuration options as below :

svnUrls = {     'displayDriverConnector'        : 'http://oglpp.googlecode.com/svn/displayDriverConnector/trunk',
                'glContext'                     : 'http://oglpp.googlecode.com/svn/glContext/trunk',
                'gle'                           : 'http://oglpp.googlecode.com/svn/gle/trunk',
                'glo'                           : 'http://oglpp.googlecode.com/svn/glo/trunk',
                'vgsdk'                         : 'http://vgsdk.googlecode.com/svn/trunk',
                'SConsBuildFramework'           : 'http://sbf.googlecode.com/svn/trunk', }
buildPath = '<absolute path to build_dir>/build'
pakPaths = ['<absolute path to build_dir>/pak']

- As an option, you can also set in this file the number of build processes to launch simultaneously :
numJobs = <a number>

- Save changes and return back to the command line interpreter
- Set the SCONS_BUILD_FRAMEWORK environment variable with the command:  export SCONS_BUILD_FRAMEWORK=`pwd`


6. Downloading and building additional dependencies
---------------------------------------------------

@todo Section about precompiled external dependencies

- In a web browser, go to 'https://www.dropbox.com/sh/0pev1iueukjelqp/AACm_GuhL3ReSLlC_Ya4i089a'
- On the displayed page, navigate into 'linux' and download the file named 'localExt_posix_gcc.zip'
- Extract the content of that file to '<build_dir>/pak' (you may need to create that directory)
- In command line interpreter, change the current directory for '<build_dir>/vgsdk'
- Run 'scons sbfpak' in order to enter external dependencies packager, and run the following commands (some can take a while to complete) :
  - 'mkpak blowfish'
  - 'mkpak boost'
  - 'mkpak cairo'
  - 'mkpak glm'
  - 'mkpak openAssetImport'
  - 'mkpak openil'  
  - 'mkpak physfs'
  - 'mkpak qt'
  - 'mkpak scintilla'
  - 'mkpak sdl'
  - 'mkpak swig'
  - 'mkpak swigShp'
  - 'exit'
 

7. Building
-----------
- In a command line interpreter, change the current directory for '<build_dir>/vgsdk/examples/qt/vgsdkViewerQt'
- Run 'scons svncheckout' to complete the vgsdk sources.
- Run 'scons pakupdate' in order to deploy additional dependencies that were built previously.
- Run 'scons' or 'scons release' to launch the build in release. Use 'scons debug' to build the debug version.
- Building results are stored in <build_dir>/local_posix_x86-32_gcc4-8
  - 'bin' contains all executable and shared libraries
  - 'include' contains all C/C++ headers of vgsdk libraries
  - 'share' contains all shared resources
 

8. Running vgsdk's Qt viewer
----------------------------
- In a command line interpreter, change the current directory for <build_dir>/local_posix_x86-32_gcc4-8/bin
- Finally, run the vgsdk's Qt viewer with './vgsdkViewerQt_0-5_posix_gcc4-x'


9. Known limitations
--------------------
Support of linux is still a work in progress and there are thus some known limitations :
- switching into full screen mode doesn't work,
- creating several windows will cause vgsdkViewerQt to crash.
